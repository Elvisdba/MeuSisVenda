/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package meuprojetot;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Frankyston&Nathalia
 */
public class ListaVenda extends javax.swing.JFrame {

    DefaultTableModel modelo = new DefaultTableModel();
    JTable tabela;
    
    public ListaVenda() {
        initComponents();
        setLocationRelativeTo(null);
        try {
            criaTablet();
        } catch (SQLException ex) {
            Logger.getLogger(ListaVenda.class.getName()).log(Level.SEVERE, null, ex);
        }
        spVendas.setViewportView(tabela);
        
        
        // Metodo que faz uma ação quando clica em fechar da janela
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent evt) {
                new Vendas().setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTitulo = new javax.swing.JLabel();
        spVendas = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SisVenda - Lista de Vendas");

        lbTitulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lbTitulo.setText("Lista de Vendas");

        spVendas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Vendas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTitulo))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lbTitulo)
                .addGap(18, 18, 18)
                .addComponent(spVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JScrollPane spVendas;
    // End of variables declaration//GEN-END:variables


    private void criaTablet() throws SQLException{
        
        tabela = new JTable(modelo);
        modelo.addColumn("Funcionario");
        modelo.addColumn("Cliente");
        modelo.addColumn("Produto");
        modelo.addColumn("Pagamento");
        
        tabela.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabela.getColumnModel().getColumn(1).setPreferredWidth(50);
        tabela.getColumnModel().getColumn(2).setPreferredWidth(40);
        tabela.getColumnModel().getColumn(3).setPreferredWidth(20);
        mostraDadosTable();
    }
    
    private void mostraDadosTable() throws SQLException{
        VendaDao dao = new VendaDao();
        
        ArrayList<Venda> v = new ArrayList<Venda>();
        
        v = dao.getVendas();
        for (int i = 0; i < v.size(); i++) {
            modelo.addRow(new Object [] {v.get(i).getFuncionario(), v.get(i).getCliente(), v.get(i).getProduto(), v.get(i).getPagamento() });
        }
        
    }
    
}
