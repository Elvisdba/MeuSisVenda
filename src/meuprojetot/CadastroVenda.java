/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package meuprojetot;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Frankyston&Nathalia
 */
public class CadastroVenda extends javax.swing.JFrame {

    /**
     * Creates new form CadastroVenda
     */
    public CadastroVenda() {
        initComponents();
        
        setLocationRelativeTo(null);
        try {
            this.ComboFuncionarios();
            this.ComboClientes();
        } catch (SQLException ex) {
            Logger.getLogger(CadastroVenda.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Metodo que faz uma ação quando clica em fechar da janela
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent evt) {
                new Vendas().setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTitulo = new javax.swing.JLabel();
        lbFuncionario = new javax.swing.JLabel();
        lbCliente = new javax.swing.JLabel();
        lbProduto = new javax.swing.JLabel();
        lbPagamento = new javax.swing.JLabel();
        btSalvar = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();
        cbFuncionario = new javax.swing.JComboBox();
        cbCliente = new javax.swing.JComboBox();
        txtProduto = new javax.swing.JTextField();
        txtPagamento = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SivVenda - Cadastro de Vendas");
        setResizable(false);

        lbTitulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lbTitulo.setText("Cadastro de Venda");

        lbFuncionario.setText("Funcionario:");

        lbCliente.setText("Cliente:");

        lbProduto.setText("Produto:");

        lbPagamento.setText("Pgamento:");

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btVoltar.setText("Voltar");
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        cbFuncionario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbTitulo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbPagamento)
                                    .addComponent(lbProduto)
                                    .addComponent(lbCliente)
                                    .addComponent(lbFuncionario))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbFuncionario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtProduto)
                                    .addComponent(txtPagamento)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btSalvar)
                        .addGap(18, 18, 18)
                        .addComponent(btVoltar)))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lbTitulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFuncionario)
                    .addComponent(cbFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCliente)
                    .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbProduto)
                    .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPagamento)
                    .addComponent(txtPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar)
                    .addComponent(btVoltar))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        new Vendas().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btVoltarActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        
        Venda venda = new Venda();
        
        if(validaCampos()){
        venda.setFuncionario(String.valueOf(cbFuncionario.getSelectedItem()));
        venda.setCliente(String.valueOf(cbCliente.getSelectedItem()));
        venda.setProduto(txtProduto.getText());
        venda.setPagamento(Double.parseDouble(txtPagamento.getText()));
        
        VendaDao dao;
        try {
            dao = new VendaDao();
            dao.CadastrarVenda(venda);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao chamar cadastrar Venda");
        }
        this.dispose();
        new Vendas().setVisible(true);
        }
    }//GEN-LAST:event_btSalvarActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btVoltar;
    private javax.swing.JComboBox cbCliente;
    private javax.swing.JComboBox cbFuncionario;
    private javax.swing.JLabel lbCliente;
    private javax.swing.JLabel lbFuncionario;
    private javax.swing.JLabel lbPagamento;
    private javax.swing.JLabel lbProduto;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JTextField txtPagamento;
    private javax.swing.JTextField txtProduto;
    // End of variables declaration//GEN-END:variables

    public void ComboFuncionarios() throws SQLException{
        
        VendaDao dao = new VendaDao();
        
        ArrayList<String> func = new ArrayList<String>();
        
        func = dao.getFuncionarios();
        
        // Remove todos os itens do ComboBox
        cbFuncionario.removeAllItems();
        
        // Listando todos os itens
        for (int i = 0; i < func.size(); i++) {
            cbFuncionario.addItem(func.get(i).toString());
        }
        
        // Atualizando os itens na ComboBox
        cbFuncionario.updateUI();
    }
    
    public void ComboClientes() throws SQLException{
        
        VendaDao dao = new VendaDao();
        
        ArrayList<String> cli = new ArrayList<String>();
        
        cli = dao.getClientes();
        
        // Remove todos os itens do ComboBox
        cbCliente.removeAllItems();
        
        // Listando todos os itens
        for (int i = 0; i < cli.size(); i++) {
            cbCliente.addItem(cli.get(i).toString());
        }
        
        // Atualizando os itens na ComboBox
        cbCliente.updateUI();
    }
    
    private boolean validaCampos(){
        
       String funcionario = String.valueOf(cbFuncionario.getSelectedItem());
       String cliente = String.valueOf(cbCliente.getSelectedItem());
        
        if(funcionario.isEmpty()){
            JOptionPane.showMessageDialog(null, "Campo(s) Funcionario Vazio(s), favor Preencher!");
            return false;
        } else if(cliente.isEmpty()){
            JOptionPane.showMessageDialog(null, "Campo(s) Cliente Vazio(s), favor Preencher!");
             return false;
        } else if(txtProduto.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Campo(s) Produto Vazio(s), favor Preencher!");
             return false;
        } else if(txtPagamento.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Campo(s) Pagamento Vazio(s), favor Preencher!");
             return false;
        } else { 
             return true;
        }
    }
    
}
